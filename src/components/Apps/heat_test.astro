---
import { type } from "os";
type Props = { html: string };
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>CodePen - Offline Heat Testing</title>
    <link rel="stylesheet" href="./style.css" />
  </head>
  <body>
    <!-- partial:index.partial.html -->
    <div id="textBoxes">
      User ID : <input type="text" id="user" value="535833752" /><br />
      SB WS Address : <input type="text" id="url" value="ws://127.0.0.1:8080/"/><br />
      Canvas Width : <input type="number" id="width" value="1920" /><br />
      Canvas Height : <input type="number" id="height" value="1080" /><br />
      Modifiers: <br />
      - Alt : <input type="checkbox" id="alt" value="false" /><br />
      - Shift : <input type="checkbox" id="shift" value="false" /><br />
      - Ctrl : <input type="checkbox" id="ctrl" value="false" /><br />
      Ensure Data is Correct above and press Open Click Map: <br />
      <button onclick="updateCanvas()"> Open Click Map</button>
    </div>
    <div id="contentContainer">
      <div id="thing"></div>
    </div>

    <script src="https://unpkg.co/gsap@3/dist/gsap.min.js"></script>
  </body>
</html>

<style>
  #contentContainer {
    position: relative;
    left: 10px;
    width: 50px;
    height: 50px;
    border: 3px black solid;
    overflow: hidden;
    background-color: #eee;
    cursor: pointer;
  }
  #thing {
    position: relative;
    width: 10px;
    height: 10px;
    left: 5px;
    top: 50px;
    background-color: clear;
    transition: left 0.5s cubic-bezier(0.42, -0.3, 0.78, 1.25),
      top 0.5s cubic-bezier(0.42, -0.3, 0.78, 1.25);
  }
  #textBoxes {
    font-family: "Lucida Console", "Courier New", monospace;
  }
</style>

<script>
/*  var theThing = document.querySelector("#thing");
  var container = document.querySelector("#contentContainer");

  //Doing the math on the click
  container.addEventListener("click", function (event) {
    var widthN = document.getElementById("width").value;
    var heightN = document.getElementById("height").value;
    var xPosition = ((event.clientX - 11) / widthN) * 2;
    var yPosition = ((event.clientY - 190) / heightN) * 2;
    console.log("X=" + xPosition + ", Y=" + yPosition);
    //this is sending it to the function so it can go back to SB
    SendClick(xPosition, yPosition);
  });
  //setting Canvas Size
  function updateCanvas() {
    gsap.to("#contentContainer", 0.2, {
      width: document.getElementById("width").value / 2,
      height: document.getElementById("height").value / 2,
    });
    console.log("Canvas Update");
  }

  //Start of Websocket Stuff
  const WEBSOCKET_URI = document.getElementById("url").value;

  // subscribe to Twitch events
  const ws = new WebSocket(WEBSOCKET_URI);
  ws.addEventListener("open", (event) => {
    console.log("Connected to Streamer.bot");

    ws.send(
      JSON.stringify({
        request: "Subscribe",
        id: "123",
        events: {
          Raw: ["SubAction"],
        },
      })
    );
  });
  //Sending info back to SB
  function SendClick(x, y) {
    var user = document.getElementById("user").value;
    var alt = document.getElementById("alt").checked;
    var ctrl = document.getElementById("ctrl").checked;
    var shift = document.getElementById("shift").checked;
    if (user == "") {
      user = "535833752";
    }
    ws.send(
      JSON.stringify({
        request: "DoAction",
        action: {
          name: "[Heat] Message",
        },

        args: {
          message:
            '{ "type": "click", "x": "' +
            x +
            '", "y": "' +
            y +
            '","modifiers": {"alt": ' +
            alt +
            ',"ctrl": ' +
            ctrl +
            ',"shift":' +
            shift +
            '},"id": "' +
            user +
            '"}',
          //'{"x":'+x+', "y":'+y+',"id":"click","type":"click"}',
        },
        id: "123",
      })
    );
    console.log("message Sent:");
  }*/
</script>
