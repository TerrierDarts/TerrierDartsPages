---
import { SIDEBAR } from '../../consts';
import { getLanguageFromURL } from '../../languages';
import NavGroup from './NavGroup.astro';
import NavLink from './NavLink.astro';

type Props = {
	currentPage: string;
};

const { currentPage } = Astro.props;
const currentPageMatch = currentPage.endsWith('/')
	? currentPage.slice(1, -1)
	: currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<nav aria-labelledby="grid-left">
	<ul class="nav-groups">
		{
			Object.entries(sidebar).map(([header, group]) => {
					return (
						<li>
							{ 'children' in group ? <NavGroup {...group} /> : <NavLink text={group.text} link={group.link} />}
						</li>
					);
			})
		}
	</ul>
</nav>


<script is:inline>
	function scrollToActiveLink() {
		var target = document.querySelector('[aria-current="page"]');
		if (target && target.offsetTop > window.innerHeight - 100) {
			document.querySelector('.nav-groups').scrollTop = target.offsetTop;
		}
	}
	window.addEventListener('DOMContentLoaded', scrollToActiveLink);
</script>


<style>
	nav {
		
		
	}

	.nav-groups {
		height: auto;
		width: fit-content;
		padding: 2rem;
		overflow-x: hidden;
		overflow-y: hidden;
		
	}

	.nav-groups > li + li {
		margin-top: 2rem;
	}

	.nav-groups > :first-child {
		padding-top: var(--doc-padding);
	}

	.nav-groups > :last-child {
		padding-bottom: 2rem;
		margin-bottom: var(--theme-navbar-height);
	}

	@media (min-width: 50em) {
		.nav-groups {
			padding: 0;
		}
	}
</style>

<style is:global>
	:root.theme-dark .nav-link a[aria-current='page'] {
		color: hsla(var(--color-base-white), 100%, 1);
	}
</style>
