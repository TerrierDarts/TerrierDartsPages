---
import type { MarkdownHeading } from "astro";
import MoreMenu from "../RightSidebar/MoreMenu.astro";
import TableOfContents from "../RightSidebar/TableOfContents";
import { Icon } from "astro-icon";
import { YouTube } from "astro-embed";

//type Props = CollectionEntry<'docs'>['data'];

type Props = {
	title: string;
	description: string;
	headings: MarkdownHeading[];
	code?: string;
	pubDate?: string;
	setUpDifficulty?: string;
	sbRequiredV?: string;
	heroImage?: string;
	youTubeLink?: string;
	twitch?: boolean;
	youtube?: boolean;
};

const {
	title,
	description,
	headings,
	setUpDifficulty = "",
	sbRequiredV = "",
	pubDate = "",
	code = "",
	heroImage = "../../heroImages/default_image.png",
	youTubeLink,
	twitch,
	youtube,
} = Astro.props;
---

<article id="article" class="content">
	<section class="main-section">
		<span class="title">{title}</span>
		<span class="description">{description}</span>
		<span class="platforms">
			{
				twitch ? (
					<>
						{" "}
						<Icon
							class="twitchIcon"
							name="mdi:twitch"
						/> &nbsp<a class="twitchLink" href="https://twitch.tv/TerrierDarts" target="_blank">Twitch</a>  {" "}
					</>
				) : null
			}
			{
				youtube ? (
					<>
					&nbsp&nbsp&nbsp<Icon class="youtubeIcon" name="mdi:youtube" />&nbsp<a class="youtubeLink" href="https://youtube.com/@TerrierDarts" target="_blank">YouTube</a>{" "}
					</>
				) : null
			}
		</span>
		{
			youTubeLink ? (
				<YouTube class="video" id={youTubeLink} />
			) : (
				<img class="hero" src={heroImage} alt="Display Image" />
			)
		}
		<span class="stats">
			{
				pubDate ? (
					<>
						Last update: <span class="time">{pubDate}</span>,
					</>
				) : null
			}
			{
				code ? (
					<>
						Version: <span class="code">{code}</span>,
					</>
				) : null
			}

			{
				sbRequiredV ? (
					<>
						SB Version: <span class="vers">{sbRequiredV}</span>.
					</>
				) : null
			}
			{
				setUpDifficulty ? (
					<>
						Set-Up Difficulty:{" "}
						<span class="stars">{setUpDifficulty}</span>.
					</>
				) : null
			}
		</span>

		<hr />

		<nav class="block sm:hidden">
			<TableOfContents
				client:media="(max-width: 50em)"
				headings={headings}
			/>
		</nav>

		<slot />
	</section>
	<nav class="block sm:hidden"></nav>
</article>

<style>
	.title {
		color: rgb(172, 172, 172);
		font-size: 2rem;
		font-weight: 800;
		justify-content: center;
		display: flex !important;
		text-decoration: underline;
	}
	.description {
		color: rgb(235, 230, 230);
		font-size: 1rem;
		font-weight: 500;
		justify-content: center;
		display: flex !important;
		font-style: italic;
	}
	.stats {
		margin-left: 8%;
	}
	.time {
		color: rgb(255, 102, 0);
		font-size: 1rem;
		font-weight: 800;
	}
	.code {
		color: rgb(242, 0, 255);
		font-size: 1rem;
		font-weight: 800;
	}
	.stars {
		color: rgb(255, 247, 0);
		font-size: 1rem;
		font-weight: 800;
	}
	.vers {
		color: rgb(0, 238, 255);
		font-size: 1rem;
		font-weight: 800;
	}
	.content {
		padding: 0;
		max-width: 75ch;
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.content > section {
		margin-bottom: 4rem;
	}

	.block {
		display: block;
	}
	.hero {
		height: 300px;
		width: 540px;
		margin-left: 8%;
		justify-content: center;
		display: flex !important;
		border-radius: 30px;
		border: 5px solid rgb(0, 157, 255);
	}

	.youtubeIcon {
		display: flex;
		color: red;
		height: 30px;
		
	}

	.twitchIcon {
		display: flex;
		color: blueviolet;
		height: 30px;
		
	}
	.platforms{
		margin-left: 8%;
		justify-content: center;
		display: flex !important;
		font-size: 18px;
	}

	.youtubeLink { 
  display: flex; 
  color: red;
}

.twitchLink { 
  display: flex; 
  color: blueviolet;
}

	@media (min-width: 50em) {
		.sm\:hidden {
			display: none;
		}
	}
</style>
